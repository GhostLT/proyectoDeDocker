version: '3.8'
 
services:
  db:
    image: mysql:5.7
    container_name: mysql-container
    restart: always
    ports: 
            - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    #env_file:
    #        - ".env"
    environment:
       MYSQL_ROOT_PASSWORD: root_password
       MYSQL_DATABASE: my_database
       MYSQL_USER: my_user
       MYSQL_PASSWORD: my_password
    volumes:
      - ./dump:/docker-entrypoint-initdb.d
      - ./conf:/etc/mysql/conf.d
      - mysql_data:/var/lib/mysql
    networks:
      - netdocker
 
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root_password
    networks:
      - netdocker
 
  nginx:
    image: nginx:alpine
    container_name: nginx-container
    restart: always
    ports:
      - "8000:80"
      - "3000:443"
    #environment:
    #        - NGINX_HOST=${NGINX_HOST}
    #command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    #restart: always
    depends_on:
            - php
            - db
    volumes:
    #  - "./conf:/etc/nginx/conf.d/default.conf"
    #  - "./etc/ssl:/etc/ssl"
    #- ./nginx.conf:/etc/nginx/conf.d/default.conf
    #  - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
    #- ./nginx.conf:/etc/nginx/nginx.conf:ro
     - ./www/html/:/var/www/html/
     - ./logs/nginx:/var/log/nginx/
    networks:
      - netdocker
 
  php:
    image: php:8.0-fpm
    restart: always
    volumes:
      - php_app:/var/www/html
    networks:
      - netdocker

  #composer:
  #      image: "composer"
  #      volumes:
  #          - "./web/app:/app"
  #      command: install
 
volumes:
  mysql_data:
  php_app:
 
networks:
  netdocker:
    driver: bridge
 
